# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Build source code to container image and deploy to AKS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: [ '17' ]

    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK ${{matrix.java}}
        uses: actions/setup-java@v4
        with:
          java-version: ${{matrix.java}}
          distribution: 'microsoft'
          cache: maven
      - name: Test
        run: ./mvnw -B test
      - name: Publish Code Coverage
        uses: codecov/codecov-action@v2
      - name: Azure Login
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - uses: azure/setup-kubectl@v3
        name: Setup kubectl
      - name: Setup kubelogin
        uses: azure/use-kubelogin@v1
        with:
          kubelogin-version: 'v0.0.26'
      - name: Set AKS context
        id: set-context
        uses: azure/aks-set-context@v3
        with:
          resource-group: '${{ secrets.RESOURCE_GROUP }}'
          cluster-name: '${{ secrets.CLUSTER_NAME }}'
          admin: 'false'
          use-kubelogin: 'true'
      - name: install Build Service CLI
        run: |
          curl -L https://github.com/buildpacks-community/kpack-cli/releases/download/v0.13.0/kp-linux-amd64-0.13.0 -o build-service
          chmod +x build-service
      - name: Build image in Cloud Build Service
        run: ./build-service image save ${{ secrets.IMAGE_RESOURCE_NAME }} --tag ${{ secrets.ACR_LOGIN_SERVER }}/${{ secrets.IMAGE_REPO }} --replace-additional-tag ${{ secrets.ACR_LOGIN_SERVER }}/${{ secrets.IMAGE_REPO }}:${{ github.sha }} --git https://github.com/${{ github.repository }}.git --git-revision ${{ github.sha }} --cluster-builder ${{ secrets.BUILDER }} --service-account ${{ secrets.SERVICE_ACCOUNT }} -w
      - name: Deploy Image to AKS
        id: deploy-aks
        uses: Azure/k8s-deploy@v4
        with:
          namespace: 'default'
          manifests: |
             deploy/deployment.yaml
          images: '${{ secrets.ACR_LOGIN_SERVER }}/${{ secrets.IMAGE_REPO }}:${{ github.sha }}'
          pull-images: false 
          imagepullsecrets: 'demo-acr-credentials'
